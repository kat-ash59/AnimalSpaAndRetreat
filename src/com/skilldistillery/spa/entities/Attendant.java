/*
 * 
 * Date				Author			Purpose
 * ===================================================================================================================
 * 09/27/2024		Kat Ash			created initial version of the Attendant class
 * 
 * 
 */

package com.skilldistillery.spa.entities;

import java.util.Objects;

public class Attendant 
{
	// variables used by the Attendant class and are visible to the class
	private String name;

	
	// constructors
	public Attendant()
	{
	} // no arg constructor
	
	public Attendant(String name) 
	{
		super();
		this.name = name;
	} // end constructor
	
	
	// worker bee methods that perform various tasks for the class
	public void makeRounds()
	{
		// this method will have the attendant check on each of the rooms
		// and feed the guests
		// clean the rooms if necessary
		System.out.println("In Attendant makeRounds not implemented yet");
	} // end makeRounds method

	
	// getters and setters auto generated by STS
	public String getName() 
	{
		return name;
	} // end method getName

	public void setName(String name) 
	{
		this.name = name;
	} // end method setName


	// method toString autoGenerated by STS
	@Override
	public String toString() 
	{
		return "Attendant [name=" + name + ", getClass()=" + getClass() + ", toString()=" + super.toString() + "]";
	} // end method toString
	
	
	// method hashCode auto generated by STS
	@Override
	public int hashCode() 
	{
		return Objects.hash(name);
	} // end method hashCode

	// method equals auto generated by STS
	@Override
	public boolean equals(Object obj) 
	{
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Attendant other = (Attendant) obj;
		return Objects.equals(name, other.name);
	} // end method equals
	
	
} // end class Attendant
