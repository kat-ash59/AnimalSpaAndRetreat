/*
 * 
 * Date				Author			Purpose
 * ===================================================================================================================
 * 09/27/2024		Kat Ash			created initial version of the Animal Retreat class
 * 									which contains the foundation of the building that the
 * 									Animal Spa resides in
 * 
 * 
 */

package com.skilldistillery.spa.entities;

import java.util.Arrays;
import java.util.Objects;
import java.util.ArrayList;

public class AnimalRetreat 
{
	// variables that are visible to the Animal retreat class
	private Attendant attendant;
	private static int MAX_NUMBER_OF_ROOMS = 10;
	Animal animalsThatCouldVisitTheSpa[] = new Animal[MAX_NUMBER_OF_ROOMS];
	ArrayList<String> listAnimals = new ArrayList<>();
	
	// constructor
	public AnimalRetreat(String attendantName)
	{
		attendant = new Attendant(attendantName); 
		// will need to implement build spa
		System.out.println("In Animal retreat constructor not implemented yet");
	} // end constructor
	
	

	public static void cleanRoom(int roomToBeCleaned)
	{
		// this method will mark the room clean
		System.out.println("In Animal Retreat clean room not implemented yet");
	} // end method to clean the room
	
	
	public static void addAnimal(Animal animalWantToReserveRoom)
	{
		// this method will add the animal to the array list
		// and add them to an empty room that is clean
		// and will say
		// if room available
		// make yourself at home
		// if no room available
		// No room at the retreat and apa, try again tomorrow
		System.out.println("In Animal Retreat add Animal not implemented yet");
	} // end method addAnimal
	
	public static void printAnimalList(ArrayList listOfAnimals)
	{
		// this method will loop thru the list of animals
		// and print out their information
		System.out.println("In Animal Retreat printAnimalList not implemented yet");
	}
	
	public static void startAttendantRounds(Attendant attendant)
	{
		// this method will call the attendants make rounds method
		System.out.println("In Animal Retreat start attendant rounds not implemented yet");
	} // end method startAttendantRounds
	
	
	public static void closeInnForTheNight(Animal animalToLeaveSpa)
	{
		// this method will have the animal leave the spa
		// vacate the room and mark it dirty
		System.out.println("In Animal Retreat closeInnForTheNight no implemented yet");
	} // end method to leave the room and spa
	
	// set attendant name
	public void setAttendant(Attendant attendant)
	{
		// this will set the attendant for the spa
		System.out.println("In Animal Retreat setAttendant not implemented yet");
		
	} // end method setAttendant
	
	
	// getter and setter for Animals visiting
	public Animal[] getAnimalsThatCouldVisitTheSpa() 
	{
		return animalsThatCouldVisitTheSpa;
	} // end method getAnimalsThatCouldVisitTheSpa


	public void setAnimalsThatCouldVisitTheSpa(Animal[] animalsThatCouldVisitTheSpa) 
	{
		this.animalsThatCouldVisitTheSpa = animalsThatCouldVisitTheSpa;
	} // end method setAnimalsThatCouldVisitTheSpa


	// to string generated by STS
	@Override
	public String toString() 
	{
		return "AnimalRetreat [attendant=" + attendant + ", animalsThatCouldVisitTheSpa="
				+ Arrays.toString(animalsThatCouldVisitTheSpa) + ", getClass()=" + getClass() + ", hashCode()="
				+ hashCode() + ", toString()=" + super.toString() + "]";
	} // end method toString


	// hashcode method generated by STS
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + Arrays.hashCode(animalsThatCouldVisitTheSpa);
		result = prime * result + Objects.hash(attendant);
		return result;
	} // end hashcode method


	// equals method generated by STS
	@Override
	public boolean equals(Object obj) 
	{
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		AnimalRetreat other = (AnimalRetreat) obj;
		return Arrays.equals(animalsThatCouldVisitTheSpa, other.animalsThatCouldVisitTheSpa)
				&& Objects.equals(attendant, other.attendant);
	} // end equals method
	
	
	
	
	
	
	
} // end class AnimalRetreat
